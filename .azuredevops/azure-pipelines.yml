trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  - group: SharedVariables


steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'Install dependencies'

- script: |
    npm run build
  displayName: 'Build the project'

- task: PowerShell@2 
  displayName: Clone existing GitHub pages repository
  condition: succeeded()
  inputs:
    targetType: inline
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    script: |
      write-host "current directory = $(get-location)"
      git clone https://LeeSanderson:$(GitHubAccessToken)@github.com/LeeSanderson/leesanderson.github.io.git --branch=main SiteSource --quiet
      if ($lastexitcode -gt 0)
      {
        write-host "Clone failed - check GitHubAccessToken is valid. Error code $lastexitcode"
      }      

- task: PowerShell@2
  displayName: Copy output to SiteSource 
  condition: succeeded()
  inputs:
    targetType: inline
    workingDirectory: '$(Pipeline.Workspace)/Tools'
    script: |
      write-host "current directory = $(get-location)"
      $outputPath = "$(System.DefaultWorkingDirectory)\SiteSource\Games\BuzzerBee"
      write-host "output path = $outputPath"
      if (Test-Path $outputPath) {
        write-host "removing previous files in $outputPath"
        Remove-Item -Path $outputPath -Recurse -Force
      }
      New-Item -ItemType Directory -Path $outputPath -Force

      $buildPath = "$(Build.SourcesDirectory)\dist"
      write-host "copying files from $buildPath to $outputPath"
      Copy-Item -Path $buildPath -Destination $outputPath -Recurse -Force

- task: PowerShell@2 
  displayName: Update GitHub pages repository
  condition: succeeded()
  inputs:
    targetType: inline
    workingDirectory: '$(System.DefaultWorkingDirectory)/SiteSource'
    script: |
      git config core.autocrlf false
      git config user.email lee.sndrsn@gmail.com
      git config user.name LeeSanderson
      git add *
      git ls-files --deleted | ForEach-Object {git rm $_}
      git commit --allow-empty -m "Blog Update $(Build.BuildId)"      
      if ($lastexitcode -gt 0)
      {
        write-host "Commit failed. Error code $lastexitcode"
        [Environment]::Exit(1)
      }      

      git push --quiet
      if ($lastexitcode -gt 0)
      {
        write-host "Push failed. Error code $lastexitcode"
        [Environment]::Exit(1)
      }      
